import 'dart:convert';
import 'package:fyn_zon/login.dart';
import 'package:page_transition/page_transition.dart';
import 'package:flutter/material.dart';
import 'package:fyn_zon/instantDeposit.dart';
import 'package:fyn_zon/tokenPass.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'Model/user_data_model.dart';
import 'Model/wallet_model.dart';
import 'mainApi.dart';

class DepositPage extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return DepositPageState();
  }
}

class DepositPageState extends State<DepositPage> {
  AutogeneratedWallet futureAlbum;
  var userid1;
  @override
  void initState() {
    fetchAlbum();
    fetchAlbum1();
    super.initState();

  }

  fetchAlbum() async {
    /* var data = {

    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      userid1 = prefs.getString("userid");
    });
    var apiData = {
      "url": AuthToken.api +
          "/" +
          "getBalance/" +
          prefs.getString('token') +
          "/" +
          prefs.getString('userid'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureAlbum = AutogeneratedWallet.fromJson(jsonDecode(onSuccess['response']));
      print("wallet>>>>>>> " + futureAlbum.data.iNRBalance.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
    });
  }
  Autogenerated futurekyc;
  var userid;
  Future<void> fetchAlbum1() async {
    /* var data = {

    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      userid = prefs.getString('userid');
    });
    var apiData = {
      "url": AuthToken.api + "/" + "client/userDetails/"+ prefs.getString('token'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futurekyc = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      //print("walletqrcode>>>>>>> " + futureAlbum.data.phone.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
    backgroundColor:Color(0xFF18222C),
      body: userid1 == null ?
      GestureDetector(
        onTap: (){
          Navigator.pop(context);
          Navigator.push(
            context,
            PageTransition(
              type: PageTransitionType.leftToRight,
              child: LoginScreen(),
            ),
          );
        },
        child: Container(
          width: MediaQuery.of(context).size.width,
          height: MediaQuery.of(context).size.height,
           color: Color(0xFF18222C),
          child:  Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Container(
                width: 100,
                alignment: Alignment.center,
                padding: EdgeInsets.all(10),
                child: Text(
                  'Login ',
                  style: TextStyle(color: Colors.white, fontSize: 18,),
                ),
                decoration: BoxDecoration(
                    borderRadius: BorderRadius.all(Radius.circular(10)),
                    color: Colors.blue,
                    border: Border.all(color: Colors.blue)),
              ),

            ],
          ),
        ),
      ):
      FutureBuilder<Autogenerated>(
          builder: (context, snapshot){
            if (futureAlbum != null){
              return Container(
                color: Color(0xFF18222C),
                padding: EdgeInsets.all(10.0),
                width: double.infinity,
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    Card(
                      margin: EdgeInsets.all(10),
                      child: Column(
                        children: [
                          Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Align(
                              alignment: Alignment.topLeft,
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Text(
                                    "Deposit Money",
                                    textAlign: TextAlign.left,
                                    style: TextStyle(
                                        fontSize: 15,
                                        color: Colors.grey[700],
                                        fontWeight: FontWeight.bold),
                                  ),
                                  GestureDetector(
                                      onTap: (){
                                        Navigator.pop(context);
                                      },
                                      child: Icon(Icons.close))
                                ],
                              ),
                            ),
                          ),
                          Divider(color: Colors.black),
                          SizedBox(
                            height: 20,
                          ),
                          Text(
                            "Available Balance",
                            style: TextStyle(fontSize: 15, color: Colors.grey[700]),
                          ),
                          futureAlbum.data.iNRBalance == null ?
                          Text(
                            "0.00 INR",
                            style: TextStyle(
                                fontSize: 22,
                                color: Colors.blue,
                                fontWeight: FontWeight.bold),
                          ):
                          Text(
                            "${futureAlbum.data.iNRBalance.toString()}INR",
                            style: TextStyle(
                                fontSize: 22,
                                color: Colors.blue,
                                fontWeight: FontWeight.bold),
                          ),
                          SizedBox(
                            height: 20,
                          ),
                          Container(
                            child: ListTile(
                              onTap: (){
                                futurekyc.data.kycApproved == true ?
                                showDialog(
                                    context: context,
                                    barrierDismissible: false,
                                    builder: (BuildContext context) {
                                      return AlertDialog(
                                        backgroundColor: Colors.blueGrey,
                                        title: Text("Kyc Approved?"),
                                        content: Text("Your Kyc didn't Approved"),
                                        actions: <Widget>[
                                          FlatButton(
                                            child: Text("Ok",style: TextStyle(
                                                color: Colors.white
                                            ),),
                                            onPressed: () {
                                              Navigator.pop(context);
                                            },
                                          ),
                                        ],
                                      );
                                    }
                                ):
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                      builder: (context) =>
                                          InstantDeposit()),
                                );
                              },
                              leading: Image.asset(
                                "assets/images/fz_deposit_deposit.png",
                                scale: 1.5,
                              ),
                              title: Text(
                                "Instant Deposit",
                                style: TextStyle(
                                    fontSize: 18,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold),
                              ),
                              subtitle: Column(
                                mainAxisAlignment: MainAxisAlignment.start,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Min 50.00 INR Max 50,00,000 INR ",
                                    style: TextStyle(fontSize: 15, color: Colors.grey[700]),
                                  ),
                                  Text(
                                    "Instant Deposit Fees : 10.00 INR ",
                                    style: TextStyle(fontSize: 15, color: Colors.grey[700]),
                                  ),
                                ],
                              ),
                              trailing: Container(
                                  padding: EdgeInsets.only(top: 20),
                                  child: Icon(Icons.arrow_forward_ios_outlined,size: 15,color: Colors.blue,)),
                            ),
                          ),

                          SizedBox(
                            height: 20,
                          )
                        ],
                      ),
                    ),
                  ],
                ),
              );
            }else if (snapshot.hasError) {
              return Text("${snapshot.error}");
            }
            return Container(
                alignment: Alignment.center,
                height: MediaQuery.of(context).size.height,
                width: MediaQuery.of(context).size.width,
                // margin: EdgeInsets.only(top: 80),
                child: CircularProgressIndicator(backgroundColor: Colors.white,));



          }
      )

    );
  }
}
