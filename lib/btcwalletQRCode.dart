import 'dart:convert';
import 'dart:typed_data';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';
import 'package:fyn_zon/tokenPass.dart';

import 'Model/qrCodeModel.dart';
import 'mainApi.dart';

class WalletQRCode extends StatefulWidget {
  String currncy;
  WalletQRCode({
    Key key,
    @required this.currncy,
  }) : super(key: key);

  @override
  _WalletQRCodeState createState() => _WalletQRCodeState();
}

class _WalletQRCodeState extends State<WalletQRCode> {
  Autogenerated futureAlbum;
  var file;
  Uint8List _bytes;
  String currncy_type;
  //String address;
  var curbtc = "BTC";
  var curbch = "BCH";
  var cureth = "ETH";
  var curusdt = "USDT";
  var curcrmt = "CRMT";

  @override
  void initState() {
    super.initState();
    check();

  }
  var image;
  check(){
    print(widget.currncy.toString());
    if(widget.currncy == curbtc){
      currncy_type = 'getQRcodeBTC';
       image = Image.asset("./assets/images/fz_btc.png",scale: 7,);
      fetchAlbum();
    }else if(widget.currncy == curbch){
      currncy_type = 'getQRcodeBCH';
      image = Image.asset("./assets/images/fz_bch.png",scale: 7,);
      fetchAlbum();
    }else if(widget.currncy == cureth){
      currncy_type = 'getQRcodeETH';
      image = Image.asset("./assets/images/fz_eth.png",scale: 7,);
      fetchAlbum();
    }else if(widget.currncy == curusdt){
      currncy_type = 'getQRcodeUSDT';
      image = Image.asset("./assets/images/fz_usdt.png",scale: 20,);
      fetchAlbum();
      /*address = futureAlbum.data.address;
      print(address);*/
    }else{
      currncy_type = 'getQRcodeCRMT';
      image = Image.asset("./assets/images/fz_crmt.png",scale: 5,);
      fetchAlbum();
    }
  }
  fetchAlbum() async {
    /* var data = {
    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();

    var apiData = {
      "url":
      AuthToken.api+"/"+"getQRcodeETH"+"/"+prefs.getString('token')+"/"+prefs.getString('userid'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureAlbum = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
     // print("walletqrcode>>>>>>> " + futureAlbum.data.qrcode);
      _bytes = base64.decode(futureAlbum.data.qrcode.split(',').last);
      setState(() {

      });

    }, (onError) {
      print("Error working with the api");
    }
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
     /* appBar: AppBar(
        title: Text('BTC'),
        backgroundColor: Color(0xFF18222C),
      ),*/
      body: Container(
          color: Color(0xFF18222C),
          padding: EdgeInsets.all(10.0),
          width: double.infinity,
          child: FutureBuilder<Autogenerated>(
            //future: futureAlbum,
            builder: (context, snapshot){
              if (futureAlbum !=null){
                return Container(
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      crossAxisAlignment: CrossAxisAlignment.center,
                      children: <Widget>[

                        Container(
                          margin: EdgeInsets.only(bottom: 32),
                          child: image,
                        ),
                        Container(
                          margin: EdgeInsets.only(bottom: 32),
                          child: Image.memory(_bytes,scale: 0.8,),
                        ),
                        Container(
                          child: Text(futureAlbum.data.address,
                            textAlign: TextAlign.center,
                            style: TextStyle(
                                color: Colors.grey,
                                fontSize: 16
                            ),),
                        ),
                        Container(
                          width: double.infinity,
                          margin: EdgeInsets.only(top: 32),
                          child: MaterialButton(
                            minWidth: double.infinity,
                            height: 40,
                            onPressed: () async{

                            },
                            color: Colors.blueGrey,
                            elevation: 0,
                            shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(5)),
                            child: Text(
                              "NEXT",
                              style: TextStyle(
                                  fontWeight: FontWeight.w600,
                                  fontSize: 14,
                                  color: Colors.white),
                            ),
                          ),
                        )
                      ],
                    ));
                //Text(snapshot.data.title);
              }
              else if (snapshot.hasError) {
                return Text("${snapshot.error}");
              }
              return Container(
                  alignment: Alignment.center,
                  height: MediaQuery.of(context).size.height,
                  width: MediaQuery.of(context).size.width,
                  child: CircularProgressIndicator());
            },
          )
        //Image.memory(_bytes,scale: 0.8,),
      ),
    );
  }
}
