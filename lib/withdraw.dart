import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:fyn_zon/first_withdrawal.dart';
import 'package:fyn_zon/login.dart';
import 'package:fyn_zon/tokenPass.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'Model/user_data_model.dart';
import 'package:page_transition/page_transition.dart';
import 'mainApi.dart';

class WithdrawPage extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return WithdrawPageState();
  }
}

class WithdrawPageState extends State<WithdrawPage> {


  Autogenerated futureData;
  var userid;

  @override
  void initState() {
    fetchAlbum1();
    super.initState();

  }
  Future<void> fetchAlbum1() async {
    /* var data = {

    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      userid = prefs.getString('userid');
    });
    var apiData = {
      "url": AuthToken.api + "/" + "client/userDetails/"+ prefs.getString('token'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureData = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      //print("walletqrcode>>>>>>> " + futureAlbum.data.phone.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFF203040),
      body:
      userid == null ?
      GestureDetector(
        onTap: (){
          Navigator.pop(context);
          Navigator.push(
            context,
            PageTransition(
              type: PageTransitionType.leftToRight,
              child: LoginScreen(),
            ),
          );
        },
        child: Container(
          width: MediaQuery.of(context).size.width,
          height: MediaQuery.of(context).size.height,
          color: Color(0xFF18222C),
          child:  Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Container(
                width: 100,
                alignment: Alignment.center,
                padding: EdgeInsets.all(10),
                child: Text(
                  'Login ',
                  style: TextStyle(color: Colors.white, fontSize: 18,),
                ),
                decoration: BoxDecoration(
                    borderRadius: BorderRadius.all(Radius.circular(10)),
                    color: Colors.blue,
                    border: Border.all(color: Colors.blue)),
              ),

            ],
          ),
        ),
      ):
      FutureBuilder<Autogenerated>(
      builder: (context, snapshot){
      if (futureData != null) {
      return Center(
        child: Container(
          alignment:Alignment.center,
           color: Color(0xFF18222C),
          padding: EdgeInsets.all(10.0),
          width: double.infinity,
          child: Column(
             mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              GestureDetector(
                onTap: () {
                  futureData.data.kycApproved == true ?
                  showDialog(
                      context: context,
                      barrierDismissible: false,
                      builder: (BuildContext context) {
                        return AlertDialog(
                          backgroundColor: Colors.blueGrey,
                          title: Text("Kyc Approved?"),
                          content: Text("Your Kyc didn't Approved"),
                          actions: <Widget>[
                            FlatButton(
                              child: Text("Ok",style: TextStyle(
                                  color: Colors.white
                              ),),
                              onPressed: () {
                                Navigator.pop(context);
                              },
                            ),
                          ],
                        );
                      }
                  ):
                  showModalBottomSheet(

                    isScrollControlled: true,
                    context: context,
                    builder: (context) => Wrap(children: [FirstWithdrawPage()]),
                  );

                  /* Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => FirstWithdrawPage()),
                  );*/
                },
                child: Card(
                  elevation: 3,
                  margin: EdgeInsets.all(10),
                  child: Container(
                    padding: EdgeInsets.all(15),
                    child: Column(
                      children: [
                        Row(
                          children: <Widget>[
                            Image.asset(
                              "assets/images/fz_withdraw_withdraw.png",
                              scale: 2,
                            ),
                            Expanded(
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Align(
                                    alignment: Alignment.topLeft,
                                    child: Padding(
                                      padding: EdgeInsets.only(left: 16.0),
                                      child: Row(
                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                        children: [
                                          Text(
                                            "Instant Withdraw (Recommended)",
                                            style: TextStyle(
                                                fontSize: 14,
                                                color: Colors.grey[700],
                                                fontWeight: FontWeight.bold),
                                          ),
                                          GestureDetector(
                                              onTap: (){
                                                Navigator.pop(context);
                                              },
                                              child: Icon(Icons.close))
                                        ],
                                      ),
                                    ),
                                  ),
                                  Align(
                                    alignment: Alignment.topLeft,
                                    child: Padding(
                                      padding:
                                      EdgeInsets.only(left: 16.0, top: 8.0),
                                      child: Row(
                                        children: <Widget>[
                                          Icon(Icons.fiber_manual_record, color: Colors.green, size: 10,),

                                          Text(
                                            "AVAILABLE",
                                            style: TextStyle(
                                                fontSize: 12,
                                                color: Colors.green,
                                                fontWeight: FontWeight.normal
                                            ),
                                          ),
                                        ],

                                      ),
                                    ),
                                  ),
                                  Align(
                                    child: Padding(
                                      padding: EdgeInsets.only(left: 16.0),
                                      child: Text(
                                        "Max \u{20B9}2 lakhs per transaction | Total \u{20B9}50 lakhs Per Day | Fee Rs \u{20B9}10 per transaction.",
                                        softWrap: true,
                                        textAlign: TextAlign.left,
                                        maxLines: 2,
                                        style: TextStyle(
                                          fontSize: 13,
                                          color: Colors.grey[700],
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            )
                          ],
                        ),
                        /*SizedBox(
                          height: 20,
                        ),*/

                      ],
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      );
      }
      else if (snapshot.hasError) {
      return Text("${snapshot.error}");
      }
      return Container(
        alignment: Alignment.center,
        height: MediaQuery.of(context).size.height,
        width: MediaQuery.of(context).size.width,
        // margin: EdgeInsets.only(top: 80),
        child: CircularProgressIndicator(backgroundColor: Colors.white,));

      }
      ),
    );
  }
}
