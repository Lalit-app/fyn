
import 'dart:convert';
import 'package:fyn_zon/Wallet/eth_Wallet_Deposit.dart';
import 'package:fyn_zon/Wallet/eth_Wallet_Withdraw.dart';
import 'package:fyn_zon/withdraw.dart';
import 'package:intl/intl.dart';
import 'package:flutter/material.dart';
import 'package:fyn_zon/tokenPass.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'custom_appbar.dart';
import 'deposit.dart';
import 'mainApi.dart';
import 'mainscreen.dart';
import 'dart:convert';
import 'package:fyn_zon/Wallet/eth_Wallet_Detail.dart';
import 'package:fyn_zon/Wallet/inr_Wallet_Detail.dart';
import 'package:intl/intl.dart';
import 'package:fyn_zon/inrTab_Deposit_Withdraw,dart.dart';
import 'package:fyn_zon/mainscreen.dart';
import 'package:fyn_zon/walletCurrencyQRCode.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:fyn_zon/tokenPass.dart';
import 'package:page_transition/page_transition.dart';
import 'package:fyn_zon/login.dart';
import 'package:fyn_zon/animation/FadeAnimation.dart';
import '../custom_appbar.dart';
import '../mainApi.dart';

class Autogenerated {
  String message;
  String error;
  Data data;

  Autogenerated({this.message, this.error, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    message = json['message'];
    error = json['error'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['message'] = this.message;
    data['error'] = this.error;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

class Data {
  String sId;
  var bTCBalance;
  var eTHBalance;
  var uSDTBalance;
  var iNRBalance;
  var bCHBalance;
  var cRMTBalance;

  Data(
      {this.sId,
        this.bTCBalance,
        this.eTHBalance,
        this.uSDTBalance,
        this.iNRBalance,
        this.bCHBalance,
        this.cRMTBalance});

  Data.fromJson(Map<String, dynamic> json) {
    sId = json['_id'];
    bTCBalance = json['BTCBalance'];
    eTHBalance = json['ETHBalance'];
    uSDTBalance = json['USDTBalance'];
    iNRBalance = json['INRBalance'];
    bCHBalance = json['BCHBalance'];
    cRMTBalance = json['CRMTBalance'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['_id'] = this.sId;
    data['BTCBalance'] = this.bTCBalance;
    data['ETHBalance'] = this.eTHBalance;
    data['USDTBalance'] = this.uSDTBalance;
    data['INRBalance'] = this.iNRBalance;
    data['BCHBalance'] = this.bCHBalance;
    data['CRMTBalance'] = this.cRMTBalance;
    return data;
  }
}

class Assets_tab extends StatefulWidget {
  const Assets_tab({Key key}) : super(key: key);

  @override
  _Assets_tabState createState() => _Assets_tabState();
}

class _Assets_tabState extends State<Assets_tab> {
  Autogenerated futureAlbum;
  var userid;
  var fName, lName;
  @override
  void initState() {
    fetchAlbum();

    super.initState();

  }
  Future<void> logout() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    // prefs?.clear();
    prefs.remove('token');
    prefs.remove('userid');
    Fluttertoast.showToast(
        msg: "User Logout",
        toastLength: Toast.LENGTH_SHORT,
        gravity: ToastGravity.CENTER,
        timeInSecForIosWeb: 1
    );

    setState(() {
      Navigator.pop(context);
      Navigator.pushReplacement(
        context,
        PageTransition(
          type: PageTransitionType.leftToRight,
          child: MainScreenPage(),
        ),
      );
    });
        (Route route) => false;
  }

  fetchAlbum() async {
    /* var data = {

    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      userid = prefs.getString("userid");
      fName = prefs.getString("fname");
      lName = prefs.getString("lname");
    });
    var apiData = {
      "url": AuthToken.api +
          "/" +
          "getBalance/" +
          prefs.getString('token') +
          "/" +
          prefs.getString('userid'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureAlbum = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      print("wallet>>>>>>> " + futureAlbum.data.eTHBalance.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
      logout();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        backgroundColor:  Color(0xFF203040),
        appBar: appBar('Assets'),
        body: FadeAnimation(
          0.0,
        SingleChildScrollView(
            child: FutureBuilder<Autogenerated>(
              //future: futureAlbum,
              builder: (context, snapshot) {
                if (futureAlbum != null) {
                  double eth = double.parse(futureAlbum.data.eTHBalance.toStringAsFixed(3));
                  String ethWallet = NumberFormat.decimalPattern().format(eth); //
                  print(ethWallet);
                  double inr = double.parse(futureAlbum.data.iNRBalance.toStringAsFixed(3));
                  String inrWallet = NumberFormat.decimalPattern().format(inr); //
                  print(inrWallet);
                  return Container(
                    alignment: Alignment.center,
                    decoration: new BoxDecoration(
                      image: new DecorationImage(image: new AssetImage("assets/bg.png"), fit: BoxFit.cover,),
                    ),
                    height: MediaQuery.of(context).size.height,
                    width: MediaQuery.of(context).size.width,
                    child: SafeArea(
                      child: Column(
                        children: <Widget>[
                          SizedBox(
                            height: 30,
                          ),
                          Padding(
                            padding: EdgeInsets.symmetric(horizontal: 10),
                            child: Card(
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(10.0),
                              ),
                              child: Padding(
                                  padding: EdgeInsets.symmetric(horizontal: 10,vertical: 5),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                    children: [
                                     Row(
                                       children: [

                                         Image.asset("./assets/images/rupee1.png",scale: 13,),
                                         SizedBox(
                                           width: 10,
                                         ),
                                         Column(
                                           crossAxisAlignment: CrossAxisAlignment.start,
                                           children: [
                                             Align(
                                               alignment: Alignment.topLeft,
                                               child: Text(
                                                 'INR',
                                                 style: TextStyle(
                                                   fontFamily: 'berlinsans',
                                                   letterSpacing: 0.8,
                                                   fontSize: 20,
                                                   fontWeight: FontWeight.w600,
                                                   color: Colors.black87,
                                                 ),
                                               ),
                                             ),
                                             SizedBox(
                                               height: 5,
                                             ),
                                             Align(
                                               alignment: Alignment.topLeft,
                                               child: Text(
                                                 "\u{20B9}$inrWallet",
                                                 textAlign: TextAlign.left,
                                                 style: TextStyle(
                                                   fontFamily: 'berlinsans',
                                                   letterSpacing: 1,
                                                   fontSize:18,
                                                   fontWeight: FontWeight.w500,
                                                   color: Colors.black87,
                                                 ),
                                               ),
                                             ),
                                           ],
                                         ),


                                       ],
                                     ),
                                      /*SizedBox(
                                        height: 5,
                                      ),*/
                                      Column(
                                        children: [
                                          MaterialButton(
                                            height: 35,
                                            minWidth: 105,
                                            onPressed: () async {
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                  builder: (context) => DepositPage(),
                                                ),
                                              );
                                            },
                                            color:Colors.green,
                                            //color: Colors.blue,
                                            elevation: 0,
                                            shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(30)),
                                            child: Text(
                                              "DEPOSIT",
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: 12,
                                                  letterSpacing: 1,
                                                  color: Colors.white),
                                            ),
                                          ),
                                          MaterialButton(
                                            height: 25,
                                            minWidth: 90,
                                            onPressed: () async {
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                  builder: (context) => WithdrawPage(),
                                                ),
                                              );
                                            },
                                            color:Colors.green,
                                            //color: Colors.blue,
                                            elevation: 0,
                                            shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(30)),
                                            child: Text(
                                              "WITHDRAW",
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: 12,
                                                  letterSpacing: 1,
                                                  color: Colors.white),
                                            ),
                                          ),
                                        ],
                                      )
                                    ],
                                  )
                              ),
                            ),
                          ),
                          SizedBox(
                            height: 10,
                          ),
                          Padding(
                            padding: EdgeInsets.symmetric(horizontal: 10),
                            child: Card(
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(10.0),
                              ),
                              child: Padding(
                                  padding: EdgeInsets.symmetric(horizontal: 10,vertical: 5),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                    children: [
                                      Row(
                                        children: [

                                          Image.asset("./assets/images/ethereumicon.png",scale: 13,),
                                          SizedBox(
                                            width: 10,
                                          ),
                                          Column(
                                            crossAxisAlignment: CrossAxisAlignment.start,
                                            children: [
                                              Align(
                                                alignment: Alignment.topLeft,
                                                child: Text(
                                                  'ETH',
                                                  style: TextStyle(
                                                    fontFamily: 'berlinsans',
                                                    letterSpacing: 0.8,
                                                    fontSize: 20,
                                                    fontWeight: FontWeight.w600,
                                                    color: Colors.black87,
                                                  ),
                                                ),
                                              ),
                                              SizedBox(
                                                height: 5,
                                              ),
                                              Align(
                                                alignment: Alignment.topLeft,
                                                child: Text(
                                                  "\$$ethWallet",
                                                  textAlign: TextAlign.left,
                                                  style: TextStyle(
                                                    fontFamily: 'berlinsans',
                                                    letterSpacing: 1,
                                                    fontSize:18,
                                                    fontWeight: FontWeight.w500,
                                                    color: Colors.black87,
                                                  ),
                                                ),
                                              ),
                                            ],
                                          ),


                                        ],
                                      ),
                                      /*SizedBox(
                                        height: 5,
                                      ),*/
                                      Column(
                                        children: [
                                          MaterialButton(
                                            height: 25,
                                            minWidth: 105,
                                            onPressed: () async {
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                    builder: (context) => EthWalletDeposit(currncy: ethWallet,)),
                                              );
                                            },
                                            color:Colors.green,
                                            //color: Colors.blue,
                                            elevation: 0,
                                            shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(30)),
                                            child: Text(
                                              "DEPOSIT",
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: 12,
                                                  letterSpacing: 1,
                                                  color: Colors.white),
                                            ),
                                          ),
                                          MaterialButton(
                                            height: 25,
                                            minWidth: 90,
                                            onPressed: () async {
                                              Navigator.push(
                                                context,
                                                MaterialPageRoute(
                                                    builder: (context) => EthWalletWithdraw(currncy: ethWallet)),
                                              );
                                            },
                                            color:Colors.green,
                                            //color: Colors.blue,
                                            elevation: 0,
                                            shape: RoundedRectangleBorder(
                                                borderRadius: BorderRadius.circular(30)),
                                            child: Text(
                                              "WITHDRAW",
                                              style: TextStyle(
                                                  fontWeight: FontWeight.w600,
                                                  fontSize: 12,
                                                  letterSpacing: 1,
                                                  color: Colors.white),
                                            ),
                                          ),
                                        ],
                                      )
                                    ],
                                  )
                              ),
                            ),
                          ),
                          SizedBox(
                            height: 10,
                          ),
                         

                        ],
                      ),
                    ),
                  );
                  //Text(snapshot.data.title);
                } else if (snapshot.hasError) {
                  return Text("${snapshot.error}");
                }
                return Container(
                    alignment: Alignment.center,
                    height: MediaQuery.of(context).size.height,
                    width: MediaQuery.of(context).size.width,
                    // margin: EdgeInsets.only(top: 80),
                    child: CircularProgressIndicator(
                        strokeWidth: 6.0,
                        backgroundColor: Colors.green,
                        valueColor: AlwaysStoppedAnimation<Color>(Colors.blue)
                    ));
              },
            )
        ),
        )
    );

  }
}
