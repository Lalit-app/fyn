
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:fyn_zon/Wallet/inr_Wallet_Deposit.dart';

import '../custom_appbar.dart';
import '../mainApi.dart';
import '../tokenPass.dart';
import 'inr_Wallet_Withdraw.dart';
import 'package:shared_preferences/shared_preferences.dart';

class Autogenerated {
  String message;
  String error;
  List<Data> data;

  Autogenerated({this.message, this.error, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    message = json['message'];
    error = json['error'];
    if (json['data'] != null) {
      data = new List<Data>();
      json['data'].forEach((v) {
        data.add(new Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['message'] = this.message;
    data['error'] = this.error;
    if (this.data != null) {
      data['data'] = this.data.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Data {
  String date;
  String amount;
  String purpose;

  Data({this.date, this.amount, this.purpose});

  Data.fromJson(Map<String, dynamic> json) {
    date = json['date'];
    amount = json['amount'];
    purpose = json['purpose'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['date'] = this.date;
    data['amount'] = this.amount;
    data['purpose'] = this.purpose;
    return data;
  }
}

class InrWalletDetail extends StatefulWidget {
  String currncy;
  String fName;
  String lName;
  InrWalletDetail({
    Key key,
    @required this.currncy,
    @required this.fName,
    @required this.lName,
  }) : super(key: key);
  @override
  _InrWalletDetailState createState() => _InrWalletDetailState();
}

class _InrWalletDetailState extends State<InrWalletDetail> {
  Autogenerated getTransection;
  String currncy;
  String fName, lName;

  @override
  void initState() {
    super.initState();
    fetchAlbum();
  }

  var userid;
  fetchAlbum() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      userid = prefs.getString('userid');
    });
    var apiData = {
      "url": AuthToken.api + "/" + "userTransaction/inrTransactions/"+prefs.getString('token'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      getTransection = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      //print("data>>>>>>>>>>" + futureAlbum.data.length.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
      setState(() {});
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: appBar('INR'),
      body: Column(
        children: [
          Container(
            decoration: new BoxDecoration(
              borderRadius: BorderRadius.only(bottomLeft: Radius.circular(40), bottomRight: Radius.circular(40)),
              image: new DecorationImage(image: new AssetImage("assets/bg.png"), fit: BoxFit.cover,),
            ),
            height: MediaQuery.of(context).size.height / 1.9,
            width: MediaQuery.of(context).size.width,
            child: Column(
              children: [
                SizedBox(
                  height: 20,
                ),
                Padding(
                  padding: EdgeInsets.symmetric(horizontal: 25,vertical: 30),
                  child: Align(
                    alignment: Alignment.topLeft,
                    child: Text('${widget.fName} ${widget.lName}'.toUpperCase(),style: TextStyle(
                      fontSize: 21,
                      fontFamily: 'berlinsans',
                      letterSpacing: 0.8,
                      fontWeight: FontWeight.w600,
                      color:Color(0xFF81C1DF),
                      //fontWeight: FontWeight.bold
                    ),),
                  ),
                ),
                GestureDetector(
                  onTap: () {
                    /*Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => WalletCurrencyQRCode( currncy: "ETH",),
                              ),
                            );*/
                  },
                  child: Padding(
                    padding: EdgeInsets.symmetric(horizontal: 25),
                    child: Card(
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                      child: Padding(
                          padding: EdgeInsets.symmetric(horizontal: 20,vertical: 5),
                          child: Column(
                            children: [
                              Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                children: [
                                  Text(
                                    'INR',
                                    style: TextStyle(
                                      fontFamily: 'berlinsans',
                                      letterSpacing: 0.8,
                                      fontSize: 22,
                                      fontWeight: FontWeight.w600,
                                      color: Colors.black87,
                                    ),
                                  ),
                                  Image.asset("./assets/images/wallet-2.png",scale: 11,),
                                ],
                              ),
                              Row(
                                children: [
                                  Align(
                                    alignment: Alignment.topLeft,
                                    child: Text(
                                      "\u{20B9}",
                                      textAlign: TextAlign.left,
                                      style: TextStyle(
                                        fontFamily: 'berlinsans',
                                        letterSpacing: 1,
                                        fontSize:18,
                                        fontWeight: FontWeight.w500,
                                        color: Colors.black87,
                                      ),
                                    ),
                                  ),
                                  Align(
                                    alignment: Alignment.topLeft,
                                    child: Text(
                                      "${widget.currncy}",
                                      textAlign: TextAlign.left,
                                      style: TextStyle(
                                        fontFamily: 'berlinsans',
                                        letterSpacing: 1,
                                        fontSize:20,
                                        fontWeight: FontWeight.w500,
                                        color: Colors.black87,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              SizedBox(
                                height: 30,
                              ),

                            ],
                          )
                      ),
                    ),
                  ),
                ),
                SizedBox(
                  height: 40,
                ),
                Padding(
                  padding: EdgeInsets.symmetric(horizontal: 30),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      MaterialButton(
                        height: 40,
                        minWidth: 140,
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => InrWalletDeposit(currncy: widget.currncy),
                            ),
                          );
                        },
                        //color:Color(0xFF81C1DF),
                        color:Color(0xFF144A7D),
                        elevation: 0,
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(30)),
                        child: Text(
                          "Deposit",
                          style: TextStyle(
                            //fontFamily: 'berlinsans',
                              letterSpacing: 1,
                              fontWeight: FontWeight.w600,
                              fontSize: 16,
                              color: Colors.white),
                        ),
                      ),
                      MaterialButton(
                        height: 40,
                        minWidth: 140,
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => InrWalletWithdraw(currncy: widget.currncy),
                            ),
                          );
                        },
                        //color:Color(0xFF81C1DF),
                        color:Color(0xFF144A7D),
                        elevation: 0,
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(30)),
                        child: Text(
                          "Withdraw",
                          style: TextStyle(
                            //fontFamily: 'berlinsans',
                              letterSpacing: 1,
                              fontWeight: FontWeight.w600,
                              fontSize: 16,
                              color: Colors.white),
                        ),
                      ),
                    ],
                  ),
                )
              ],
            ),
          ),
          Padding(
            padding: EdgeInsets.fromLTRB(25, 30, 25, 10),
            child: Align(
              alignment: Alignment.center,
              child: Text('Transactions',style: TextStyle(
                  fontSize: 35,
                  fontFamily: 'berlinsans',
                  letterSpacing: 0.8,
                  fontWeight: FontWeight.w600,
                  color:Colors.black87
                //fontWeight: FontWeight.bold
              ),),
            ),
          ),

          Expanded(

              child: FutureBuilder<Autogenerated>(
    builder: (context, snapshot){
    if (getTransection != null){
      return Column(
        children: [
          Container(
            height: 40,
            padding: EdgeInsets.symmetric(horizontal: 20),
            color: Colors.lightBlue,
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: <Widget>[
                Text(
                  "TRANSACTIONS",
                  style: TextStyle(color: Colors.white,fontWeight: FontWeight.w600,letterSpacing: 0.5),

                ),

                Padding(
                  padding: EdgeInsets.only(right: 5),
                  child: Text(
                    "DATE/TIME",
                    style: TextStyle(color: Colors.white,fontWeight: FontWeight.w600,letterSpacing: 0.5),

                  ),
                ),

              ],
            ),
          ),
          SizedBox(
            height: 10,
          ),
          Flexible(
            child: ListView.builder(
                itemCount: getTransection.data.length == null
                    ? 0
                    : getTransection.data.length,
                itemBuilder: (context, position) {
                  return Column(
                    children: [
                      Padding(
                        padding: EdgeInsets.symmetric(horizontal: 30),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Text('\$ ${getTransection.data[position].amount}',
                              style: TextStyle(
                                  color:
                                  getTransection.data[position].purpose == "credit"?
                                  Colors.green:
                                  Colors.red,
                                  fontSize: 18
                              ),),
                            Text('${getTransection.data[position].date}',
                              style: TextStyle(
                                  color: Colors.black,
                                  fontWeight: FontWeight.bold
                              ),)
                          ],
                        ),
                      ),
                      Divider(
                        color: Colors.grey.shade400,
                        thickness: 0.5,
                      ),
                      SizedBox(
                        height: 10,
                      ),
                    ],
                  );
                }

            ),
          ),
        ],
      );
    }else if (snapshot.hasError) {
      return Text("${snapshot.error}");
    }
    return Container(

        decoration: new BoxDecoration(
          image: new DecorationImage(
            image: new AssetImage("assets/bg.png"),
            fit: BoxFit.cover,),
        ),
        alignment: Alignment.center,
        height: MediaQuery
            .of(context)
            .size
            .height,
        width: MediaQuery
            .of(context)
            .size
            .width,
        // margin: EdgeInsets.only(top: 80),
        child: CircularProgressIndicator(strokeWidth: 6.0,
            backgroundColor: Colors.green,
            valueColor: AlwaysStoppedAnimation<Color>(
                Colors.blue)));
    }

    )


              )
        ],
      ),
    );
  }
}
