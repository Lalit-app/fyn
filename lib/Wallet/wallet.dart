import 'dart:convert';
import 'package:fyn_zon/KYC/common_api.dart';
import 'package:fyn_zon/Wallet/eth_Wallet_Detail.dart';
import 'package:fyn_zon/Wallet/inr_Wallet_Detail.dart';
import 'package:intl/intl.dart';
import 'package:fyn_zon/inrTab_Deposit_Withdraw,dart.dart';
import 'package:fyn_zon/mainscreen.dart';
import 'package:fyn_zon/walletCurrencyQRCode.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:fyn_zon/tokenPass.dart';
import 'package:page_transition/page_transition.dart';
import 'package:fyn_zon/login.dart';
import 'package:fyn_zon/animation/FadeAnimation.dart';
import '../custom_appbar.dart';
import '../mainApi.dart';

class Autogenerated {
  String message;
  String error;
  Data data;

  Autogenerated({this.message, this.error, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    message = json['message'];
    error = json['error'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['message'] = this.message;
    data['error'] = this.error;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

class Data {
  String sId;
  var bTCBalance;
  var eTHBalance;
  var uSDTBalance;
  var iNRBalance;
  var bCHBalance;
  var cRMTBalance;

  Data(
      {this.sId,
      this.bTCBalance,
      this.eTHBalance,
      this.uSDTBalance,
      this.iNRBalance,
      this.bCHBalance,
      this.cRMTBalance});

  Data.fromJson(Map<String, dynamic> json) {
    sId = json['_id'];
    bTCBalance = json['BTCBalance'];
    eTHBalance = json['ETHBalance'];
    uSDTBalance = json['USDTBalance'];
    iNRBalance = json['INRBalance'];
    bCHBalance = json['BCHBalance'];
    cRMTBalance = json['CRMTBalance'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['_id'] = this.sId;
    data['BTCBalance'] = this.bTCBalance;
    data['ETHBalance'] = this.eTHBalance;
    data['USDTBalance'] = this.uSDTBalance;
    data['INRBalance'] = this.iNRBalance;
    data['BCHBalance'] = this.bCHBalance;
    data['CRMTBalance'] = this.cRMTBalance;
    return data;
  }
}

class Wallet extends StatefulWidget {
  @override
  _WalletState createState() => _WalletState();
}

class _WalletState extends State<Wallet> {
  Autogenerated futureAlbum;
  var userid;
  var fName, lName;
  @override
  void initState() {
    fetchAlbum();
    get_User();
    super.initState();

  }
  var crmt;
  var data;
  get_User()async{
    var rsp = await getCRMT();
    var message = rsp['message'];
     data = rsp['data'];
    var error = rsp['error'];
    if(error == "true"){
      Fluttertoast.showToast(
          msg:  message,
          toastLength: Toast.LENGTH_SHORT,
          gravity: ToastGravity.CENTER,
          timeInSecForIosWeb: 1,
          backgroundColor: Colors.red,
          textColor: Colors.white,
          fontSize: 16.0);
    }else{
      crmt = data['totalValue'];
      Fluttertoast.showToast(
          msg:  message,
          toastLength: Toast.LENGTH_SHORT,
          gravity: ToastGravity.CENTER,
          timeInSecForIosWeb: 1,
          backgroundColor: Colors.red,
          textColor: Colors.white,
          fontSize: 16.0);
    }

  }





  Future<void> logout() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    // prefs?.clear();
    prefs.remove('token');
    prefs.remove('userid');
    Fluttertoast.showToast(
        msg: "User Logout",
        toastLength: Toast.LENGTH_SHORT,
        gravity: ToastGravity.CENTER,
        timeInSecForIosWeb: 1
    );

    setState(() {
      Navigator.pop(context);
      Navigator.pushReplacement(
        context,
        PageTransition(
          type: PageTransitionType.leftToRight,
          child: MainScreenPage(),
        ),
      );
    });
        (Route route) => false;
  }

  fetchAlbum() async {
    /* var data = {

    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      userid = prefs.getString("userid");
      fName = prefs.getString("fname");
      lName = prefs.getString("lname");
    });
    var apiData = {
      "url": AuthToken.api +
          "/" +
          "getBalance/" +
          prefs.getString('token') +
          "/" +
          prefs.getString('userid'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureAlbum = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      print("wallet>>>>>>> " + futureAlbum.data.eTHBalance.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
      logout();
    });
  }




  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor:  Color(0xFF203040),
        appBar: appBar('Wallet'),
        body: FadeAnimation(

          0.0, userid == null ?
          GestureDetector(
            onTap: (){
              Navigator.pop(context);
              Navigator.push(
                context,
                PageTransition(
                  type: PageTransitionType.leftToRight,
                  child: LoginScreen(),
                ),
              );
            },
            child: Container(
              decoration: new BoxDecoration(
                image: new DecorationImage(image: new AssetImage("assets/bg.png"), fit: BoxFit.cover,),
              ),
              width: MediaQuery.of(context).size.width,
              height: MediaQuery.of(context).size.height,
             // color: Color(0xFF18222C),
              child:  Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Container(
                    width: 100,
                    alignment: Alignment.center,
                    padding: EdgeInsets.all(10),
                    child: Text(
                      'Login ',
                      style: TextStyle(color: Colors.white, fontSize: 18,),
                    ),
                    decoration: BoxDecoration(
                        borderRadius: BorderRadius.all(Radius.circular(10)),
                        color: Colors.blue,
                        border: Border.all(color: Colors.blue)),
                  ),

                ],
              ),
            ),
          ):
          SingleChildScrollView(
              child: FutureBuilder<Autogenerated>(
            //future: futureAlbum,
            builder: (context, snapshot) {
              if (futureAlbum != null) {
                double eth = double.parse(futureAlbum.data.eTHBalance.toStringAsFixed(3));
                String ethWallet = NumberFormat.decimalPattern().format(eth); //
                print(ethWallet);
                double inr = double.parse(futureAlbum.data.iNRBalance.toStringAsFixed(3));
                String inrWallet = NumberFormat.decimalPattern().format(inr); //
                print(inrWallet);
                return Container(
                 alignment: Alignment.center,
                  decoration: new BoxDecoration(
                    image: new DecorationImage(image: new AssetImage("assets/bg.png"), fit: BoxFit.cover,),
                  ),
                  height: MediaQuery.of(context).size.height,
                  width: MediaQuery.of(context).size.width,
                  child: SafeArea(
                    child: Column(
                      children: <Widget>[
                        SizedBox(
                          height: 20,
                        ),
                        Padding(
                          padding: EdgeInsets.symmetric(horizontal: 20),
                          child: Align(
                            alignment: Alignment.topLeft,
                            child: Image.asset("./assets/images/wallet-2.png",
                              height: 40,),
                          ),
                        ),
                        SizedBox(
                          height: 20,
                        ),
                        Padding(
                          padding: EdgeInsets.symmetric(horizontal: 30),
                          child: Align(
                            alignment: Alignment.topLeft,
                            child: Text('$fName $lName'.toUpperCase(),style: TextStyle(
                              fontSize: 21,
                              fontFamily: 'berlinsans',
                              letterSpacing: 0.8,
                              fontWeight: FontWeight.w600,
                              color:Color(0xFF81C1DF),
                              //fontWeight: FontWeight.bold
                            ),),
                          ),
                        ),
                        SizedBox(
                          height: 50,
                        ),
                        GestureDetector(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => InrWalletDetail(currncy: inrWallet, fName: fName, lName: lName),
                              ),
                            );
                          },
                          child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: 25),
                            child: Card(
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(10.0),
                              ),
                              child: Padding(
                                  padding: EdgeInsets.symmetric(horizontal: 20,vertical: 5),
                                  child: Column(
                                    children: [
                                      Row(
                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                        children: [
                                          Text(
                                            'INR',
                                            style: TextStyle(
                                              fontFamily: 'berlinsans',
                                              letterSpacing: 0.8,
                                              fontSize: 22,
                                              fontWeight: FontWeight.w600,
                                              color: Colors.black87,
                                            ),
                                          ),
                                          Image.asset("./assets/images/rupee1.png",scale: 10,),
                                        ],
                                      ),
                                      Row(
                                        children: [
                                          Align(
                                            alignment: Alignment.topLeft,
                                            child: Text(
                                              "\u{20B9}",
                                              textAlign: TextAlign.left,
                                              style: TextStyle(
                                                fontFamily: 'berlinsans',
                                                letterSpacing: 1,
                                                fontSize:18,
                                                fontWeight: FontWeight.w500,
                                                color: Colors.black87,
                                              ),
                                            ),
                                          ),
                                          Align(
                                            alignment: Alignment.topLeft,
                                            child: Text(
                                              "$inrWallet",
                                              textAlign: TextAlign.left,
                                              style: TextStyle(
                                                fontFamily: 'berlinsans',
                                                letterSpacing: 1,
                                                fontSize:20,
                                                fontWeight: FontWeight.w500,
                                                color: Colors.black87,
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                      SizedBox(
                                        height: 20,
                                      ),
                                    ],
                                  )
                              ),
                            ),
                          ),
                        ),
                        SizedBox(
                          height: 20,
                        ),
                        GestureDetector(
                          onTap: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => EthWalletDetail(currncy: ethWallet, fName: fName, lName: lName),
                              ),
                            );
                          },
                          child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: 25),
                            child: Card(
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(10.0),
                              ),
                              child: Padding(
                                padding: EdgeInsets.symmetric(horizontal: 20,vertical: 5),
                                child: Column(
                                  children: [
                                    Row(
                                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                      children: [
                                        Text(
                                          'Ethereum',
                                          style: TextStyle(
                                            fontFamily: 'berlinsans',
                                            letterSpacing: 0.8,
                                            fontSize: 22,
                                            fontWeight: FontWeight.w600,
                                            color: Colors.black87,
                                          ),
                                        ),
                                        Image.asset("./assets/images/ethereumicon.png",scale: 10,),
                                      ],
                                    ),
                                    Align(
                                      alignment: Alignment.topLeft,
                                      child: Text(
                                        "\$$ethWallet",
                                        textAlign: TextAlign.left,
                                        style: TextStyle(
                                          fontFamily: 'berlinsans',
                                          letterSpacing: 1,
                                          fontSize:20,
                                          fontWeight: FontWeight.w500,
                                          color: Colors.black87,
                                        ),
                                      ),
                                    ),
                                    SizedBox(
                                      height: 20,
                                    ),
                                  ],
                                )
                              ),
                            ),
                          ),
                        ),
                        SizedBox(
                          height: 20,
                        ),
                        GestureDetector(
                          onTap: () {
                           /* Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => EthWalletDetail(currncy: ethWallet, fName: fName, lName: lName),
                              ),
                            );*/
                          },
                          child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: 25),
                            child: Card(
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(10.0),
                              ),
                              child: Padding(
                                  padding: EdgeInsets.symmetric(horizontal: 20,vertical: 5),
                                  child: Column(
                                    children: [
                                      Row(
                                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                        children: [
                                          Text(
                                            'CRMT',
                                            style: TextStyle(
                                              fontFamily: 'berlinsans',
                                              letterSpacing: 0.8,
                                              fontSize: 22,
                                              fontWeight: FontWeight.w600,
                                              color: Colors.black87,
                                            ),
                                          ),
                                          Image.asset("./assets/images/fz_crmt.png",scale: 6.5,),
                                        ],
                                      ),
                                      Align(
                                        alignment: Alignment.topLeft,
                                        child:
                                        crmt == null ?
                                        Text(
                                          "\$ 0 ",
                                          textAlign: TextAlign.left,
                                          style: TextStyle(
                                            fontFamily: 'berlinsans',
                                            letterSpacing: 1,
                                            fontSize:20,
                                            fontWeight: FontWeight.w500,
                                            color: Colors.black87,
                                          ),
                                        ):
                                        Text(
                                          "\$${crmt.toString()}",
                                          textAlign: TextAlign.left,
                                          style: TextStyle(
                                            fontFamily: 'berlinsans',
                                            letterSpacing: 1,
                                            fontSize:20,
                                            fontWeight: FontWeight.w500,
                                            color: Colors.black87,
                                          ),
                                        )
                                      ),
                                      SizedBox(
                                        height: 20,
                                      ),
                                    ],
                                  )
                              ),
                            ),
                          ),
                        ),

                      ],
                    ),
                  ),
                );
                //Text(snapshot.data.title);
              } else if (snapshot.hasError) {
                return Text("${snapshot.error}");
              }
              return Container(
                  alignment: Alignment.center,
                  height: MediaQuery.of(context).size.height,
                  width: MediaQuery.of(context).size.width,
                  // margin: EdgeInsets.only(top: 80),
                  child: CircularProgressIndicator(
                      strokeWidth: 6.0,
                      backgroundColor: Colors.green,
                      valueColor: AlwaysStoppedAnimation<Color>(Colors.blue)
                  ));
            },
          )
          ),
        )
    );

  }
}
