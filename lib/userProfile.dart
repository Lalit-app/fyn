import 'dart:convert';
import 'package:fyn_zon/updateProfile.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';
import 'package:fyn_zon/animation/FadeAnimation.dart';
import 'package:fyn_zon/tokenPass.dart';
import 'package:fyn_zon/mainscreen.dart';
import 'mainApi.dart';

class Autogenerated {
  String message;
  String error;
  Data data;

  Autogenerated({this.message, this.error, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    message = json['message'];
    error = json['error'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['message'] = this.message;
    data['error'] = this.error;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

class Data {
  String country;
  String sId;
  int phone;
  String fname;
  String lname;
  String email;
  String pin;
  String address;
  String adhaarNumber;
  String city;
  String dob;
  String panNumber;
  String pinCode;
  String state;
  String nationality;

  Data(
      {this.country,
        this.sId,
        this.phone,
        this.fname,
        this.lname,
        this.email,
        this.pin,
        this.address,
        this.adhaarNumber,
        this.city,
        this.dob,
        this.panNumber,
        this.pinCode,
        this.state,
        this.nationality});

  Data.fromJson(Map<String, dynamic> json) {
    country = json['country'];
    sId = json['_id'];
    phone = json['phone'];
    fname = json['fname'];
    lname = json['lname'];
    email = json['email'];
    pin = json['pin'];
    address = json['address'];
    adhaarNumber = json['adhaarNumber'];
    city = json['city'];
    dob = json['dob'];
    panNumber = json['panNumber'];
    pinCode = json['pinCode'];
    state = json['state'];
    nationality = json['nationality'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['country'] = this.country;
    data['_id'] = this.sId;
    data['phone'] = this.phone;
    data['fname'] = this.fname;
    data['lname'] = this.lname;
    data['email'] = this.email;
    data['pin'] = this.pin;
    data['address'] = this.address;
    data['adhaarNumber'] = this.adhaarNumber;
    data['city'] = this.city;
    data['dob'] = this.dob;
    data['panNumber'] = this.panNumber;
    data['pinCode'] = this.pinCode;
    data['state'] = this.state;
    data['nationality'] = this.nationality;
    return data;
  }
}

class UserProfile extends StatefulWidget {
  @override
  _UserProfileState createState() => _UserProfileState();
}

class _UserProfileState extends State<UserProfile> {
  Autogenerated futureAlbum;
  @override
  void initState() {
    super.initState();
    fetchAlbum();

  }

  fetchAlbum() async {
    /* var data = {

    };*/
    SharedPreferences prefs = await SharedPreferences.getInstance();
    /*var token = prefs.getString("token");
    AuthToken.authtoken = token;*/
    var apiData = {
      "url": AuthToken.api + "/" + "client/userDetails/" + prefs.getString('token'),
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureAlbum = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      print("walletqrcode>>>>>>> " + futureAlbum.data.phone.toString());
      setState(() {});
    }, (onError) {
      print("Error working with the api");
    });
  }
  void _moveToSignInScreen(BuildContext context) =>
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => MainScreenPage(),
        ),
      );
  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async => false,
      child: Container(
        color: Colors.white,
       // margin:EdgeInsets.all(15),
       /* width: MediaQuery.of(context).size.width,
        height: MediaQuery.of(context).size.height / 2.7,*/
        child: SingleChildScrollView(
          child: Container(
              color: Colors.white,
              child: FutureBuilder<Autogenerated>(
                //future: futureAlbum,
                builder: (context, snapshot) {
                  if (futureAlbum != null) {
                    String name = futureAlbum.data.fname;
                    String lastname = futureAlbum.data.lname;
                    String email = futureAlbum.data.email;
                    String city = futureAlbum.data.city;
                    String state = futureAlbum.data.state;
                    String nationality = futureAlbum.data.nationality;
                    String pin = futureAlbum.data.pin;
                    String pincode = futureAlbum.data.pinCode;
                    String phone = futureAlbum.data.phone.toString();
                    return Card(
                      elevation: 2,
                      child: Container(
                        padding: EdgeInsets.only(bottom: 20),

                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: <Widget>[
                            FadeAnimation(
                              1.5,
                              GestureDetector(
                                onTap: (){
                                  Navigator.pop(context);
                                },
                                child: Align(
                                  alignment: Alignment.topRight,
                                  child: Container(
                                    //width: 70,
                                      padding: EdgeInsets.all(10),
                                      /* color: Colors.blue,*/
                                      margin: EdgeInsets.only(top: 3,right: 2),
                                      alignment: Alignment.topRight,
                                      child: Icon(Icons.close,color: Colors.black,
                                      )
                                  ),
                                ),
                              ),
                            ),
                            FadeAnimation(
                              1.5,
                              Container(
                                child: Text(
                                  'User Profile',
                                  style: TextStyle(
                                    fontSize: 20,
                                    color: Colors.black,
                                    //fontWeight: FontWeight.bold
                                  ),
                                ),
                              ),
                            ),

                            FadeAnimation(
                              1.5,
                              Container(
                                padding: EdgeInsets.fromLTRB(15, 40, 20, 5),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                  children: <Widget>[
                                    Container(
                                      child: Text('Contact Number*',style: TextStyle(
                                          color: Colors.black,
                                          fontSize: 16,
                                          fontWeight: FontWeight.w400
                                      ),),
                                    ),
                                    Container(
                                      margin: EdgeInsets.only(left: 10),
                                      child: Text(
                                        futureAlbum.data.phone.toString(),
                                        style: TextStyle(
                                          fontSize: 18,
                                          color: Colors.blueGrey,
                                          //fontWeight: FontWeight.bold
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                            FadeAnimation(
                              2.5,
                              Container(
                                padding: EdgeInsets.fromLTRB(15, 15, 20, 5),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                  children: <Widget>[
                                    Container(
                                      child: Text('User Name*',style: TextStyle(
                                          color: Colors.black,
                                          fontSize: 16,
                                          fontWeight: FontWeight.w400
                                      ),),
                                    ),
                                    /* Container(
                                    alignment: Alignment.center,
                                    child: Icon(
                                      Icons.person,
                                      color: Colors.white,
                                    ),
                                  ),*/
                                    Container(
                                      child: Row(
                                        children: <Widget>[
                                          Container(
                                            margin: EdgeInsets.only(left: 10),
                                            child: Text(
                                              futureAlbum.data.fname,
                                              style: TextStyle(
                                                fontSize: 18,
                                                color: Colors.blueGrey,
                                                //fontWeight: FontWeight.bold
                                              ),
                                            ),
                                          ),
                                          Container(
                                            margin: EdgeInsets.only(left: 5),
                                            child: Text(
                                              futureAlbum.data.lname,
                                              style: TextStyle(
                                                fontSize: 18,
                                                color: Colors.blueGrey,
                                                //fontWeight: FontWeight.bold
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    )
                                  ],
                                ),
                              ),
                            ),
                            FadeAnimation(
                              2.5,
                              Container(

                                padding: EdgeInsets.fromLTRB(15, 15, 20, 5),
                                child: Row(
                                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                  children: <Widget>[
                                    Container(
                                      child: Text('Email ID*',style: TextStyle(
                                          color: Colors.black,
                                          fontSize: 16,
                                          fontWeight: FontWeight.w400
                                      ),),
                                    ),
                                    Expanded(
                                      child: Container(
                                        margin: EdgeInsets.only(left: 10),
                                        child: Text(
                                          futureAlbum.data.email,
                                          textAlign: TextAlign.right,
                                          overflow: TextOverflow.ellipsis,
                                          maxLines: 2,

                                          style: TextStyle(
                                            fontSize: 18,
                                            color: Colors.blueGrey,
                                            //fontWeight: FontWeight.bold
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    );
                  } else if (snapshot.hasError) {
                    return Text("${snapshot.error}");
                  }
                  return Container(
                      alignment: Alignment.center,
                      height: MediaQuery.of(context).size.height,
                      width: MediaQuery.of(context).size.width,
                      // margin: EdgeInsets.only(top: 80),
                      child: CircularProgressIndicator());
                },
              )
          ),
        ),
      ),
    );
  }
}
