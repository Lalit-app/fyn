import 'dart:convert';
import 'dart:typed_data';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:flutter/material.dart';
import 'package:fyn_zon/tokenPass.dart';

import 'mainApi.dart';

class Autogenerated {
  String message;
  String error;
  Data data;

  Autogenerated({this.message, this.error, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    message = json['message'];
    error = json['error'];
    data = json['data'] != null ? new Data.fromJson(json['data']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['message'] = this.message;
    data['error'] = this.error;
    if (this.data != null) {
      data['data'] = this.data.toJson();
    }
    return data;
  }
}

class Data {
  String qrcode;
  String address;

  Data({this.qrcode, this.address});

  Data.fromJson(Map<String, dynamic> json) {
    qrcode = json['qrcode'];
    address = json['address'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['qrcode'] = this.qrcode;
    data['address'] = this.address;
    return data;
  }
}

class CRMTWalletQRCode extends StatefulWidget {
  @override
  _CRMTWalletQRCodeState createState() => _CRMTWalletQRCodeState();
}

class _CRMTWalletQRCodeState extends State<CRMTWalletQRCode> {
  Autogenerated futureAlbum;
  var file;
  Uint8List _bytes;
  @override
  void initState() {
    super.initState();
    fetchAlbum();
  }
  fetchAlbum() async {
    /* var data = {

    };*/
    var prefs = await SharedPreferences.getInstance();
    var user = prefs.getString("userid");
    AuthToken.userid=user;
    var token = prefs.getString("token");
    AuthToken.authtoken=token;
    var apiData = {
      "url":
      AuthToken.api+"/"+"getQRcodeCRMT/"+AuthToken.authtoken+"/"+AuthToken.userid,
      //"data": data
    };
    ApiClass.getApiCall(apiData, (onSuccess) {
      print(onSuccess.toString());
      futureAlbum = Autogenerated.fromJson(jsonDecode(onSuccess['response']));
      // print("walletqrcode>>>>>>> " + futureAlbum.data.qrcode);
      _bytes = base64.decode(futureAlbum.data.qrcode.split(',').last);
      setState(() {

      });

    }, (onError) {
      print("Error working with the api");
    }
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('CRMT'),
        backgroundColor: Color(0xFF18222C),
      ),
      body: Container(
        color: Color(0xFF18222C),
        padding: EdgeInsets.all(10.0),
        width: double.infinity,
        child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: <Widget>[
              Container(
                margin: EdgeInsets.only(bottom: 32),
                child: Image.asset("./assets/images/fz_usdt.png",scale: 20,),
              ),

              Container(
                  child: FutureBuilder<Autogenerated>(
                    //future: futureAlbum,
                    builder: (context, snapshot){
                      if (futureAlbum !=null){
                        return Image.memory(_bytes,scale: 0.8,);
                        //Text(snapshot.data.title);
                      }
                      else if (snapshot.hasError) {
                        return Text("${snapshot.error}");
                      }
                      return CircularProgressIndicator();
                    },
                  )


                //Image.memory(_bytes,scale: 0.8,),
              ),
              Container(
                  margin: EdgeInsets.only(top: 12),
                  child:  FutureBuilder<Autogenerated>(
                    //future: futureAlbum,
                    builder: (context, snapshot){
                      if (futureAlbum !=null){
                        return  Text(futureAlbum.data.address,
                          textAlign: TextAlign.center,
                          style: TextStyle(
                              color: Colors.grey,
                              fontSize: 16
                          ),);
                        //Text(snapshot.data.title);
                      }
                      else if (snapshot.hasError) {
                        return Text("${snapshot.error}");
                      }
                      return CircularProgressIndicator();
                    },
                  )
              ),
              Container(
                margin: EdgeInsets.only(top: 32),
                child: RaisedButton(child: Text("Next"),
                  onPressed: (){
                    /* Navigator.push(
                      context,
                      MaterialPageRoute(
                          builder: (context) => QRCodeDigit()),
                    );*/
                  },
                  color: Colors.grey,
                  textColor: Colors.white,
                  padding: EdgeInsets.fromLTRB(90, 10, 90, 10),
                  splashColor: Colors.orangeAccent,
                ),
              )
            ]
        ),
      ),
    );
  }
}
